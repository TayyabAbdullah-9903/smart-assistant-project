# Auto-generated UML Python File
# Manual ID: 1
# Diagram Type: activity
# Generated by Smart Manual Assistant

import matplotlib.pyplot as plt
import networkx as nx
from graphviz import Source

# === PLANTUML CODE START ===
puml_code = """@startuml
(*) --> "Tire or wheel changed?"
if "Yes" then
  --> "Enter correct details in tire settings"
endif
--> "Tire Pressure Monitor active (after driving a few minutes)"
--> "Sensors measure tire pressure and temperature"
--> "System compares target pressures with actual pressures"
if "Tires with special approval?" then
  --> "Reset system"
  --> "System takes over actual pressures as target pressures"
else
  --> "Tire details re-entered when pressure corrected?"
  if "No" then
    --> "Ensure correct tire sizes are displayed"
  endif
endif
--> "Is there a tire pressure loss?"
if "Yes" then
  --> "Issue warning"
endif
--> "Determine intended tire inflation pressure levels"
--> "Check tire inflation pressure with pressure gage"
--> "Correct tire inflation pressure if needed"
--> "Check valve caps"
--> "Check tire inflation pressure of emergency wheel"
--> "Check tire inflation pressure specifications on Control Display"
--> "Correct tire inflation pressure if needed"
--> "After correcting tire pressure"
--> "Tire Pressure Monitoring System (TPMS)"
--> "Check tires monthly when cold and inflate to recommended pressure"
--> "Low tire pressure telltale illuminates?"
if "Yes" then
  --> "Stop and check tires as soon as possible"
  --> "Inflate to proper pressure"
endif
--> "TPMS malfunction indicator?"
if "Yes" then
  --> "Telltale flashes then remains on"
  --> "System may not detect low pressure"
endif
--> "Sudden tire pressure loss?"
if "Yes" then
  --> "System cannot indicate sudden serious tire damage"
endif
--> "Failure performing a reset?"
if "Yes" then
  --> "System will not function correctly"
endif
--> "Malfunction Message?"
if "Yes" then
  --> "Yellow warning light flashes and is then illuminated continuously"
  --> "A Check Control message is displayed"
  --> "It may not be possible to identify tire pressure losses"
endif
--> "Wheel without wheel electronics mounted?"
if "Yes" then
  --> "Have the wheels checked"
endif
--> "Fault caused by systems or devices with the same radio frequency?"
if "Yes" then
  --> "After leaving the area of the interference, the system automatically becomes active again."
endif
--> "Tires with special approval: the system was unable to complete the reset?"
if "Yes" then
  --> "Perform a system reset again."
endif
--> "Tire Pressure Monitor malfunction?"
if "Yes" then
  --> "have the system checked by a manufacturer service center or another qualified service center or repair shop."
endif
--> (*)
@enduml
"""
# === PLANTUML CODE END ===

# Save PlantUML source separately for editing
with open("diagram.puml", "w", encoding="utf-8") as f:
    f.write(puml_code)
print("âœ… Saved PlantUML as diagram.puml")

# Optional simple visualization
G = nx.DiGraph()
G.add_edges_from([
    ("Start", "Procedure Step 1"),
    ("Procedure Step 1", "End")
])
nx.draw(G, with_labels=True, node_color="lightblue", node_size=2500)
plt.show()
